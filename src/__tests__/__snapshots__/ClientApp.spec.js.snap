// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClientApp renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <div
        className="App"
    >
        <Unknown
            getCurrent={[Function]}
            getRandom={[Function]}
        />
        <h1>
            DAGON WEATHER APP
        </h1>
        <input
            onChange={undefined}
            onKeyPress={[Function]}
            placeholder="Search a city for the current weather"
            type="text"
        />
        <br />
        <Unknown
            cityName={undefined}
            currently=""
            description=""
            timeStamp=""
        />
    </div>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <div
            className="App"
      >
            <Unknown
                  getCurrent={[Function]}
                  getRandom={[Function]}
            />
            <h1>
                  DAGON WEATHER APP
            </h1>
            <input
                  onChange={undefined}
                  onKeyPress={[Function]}
                  placeholder="Search a city for the current weather"
                  type="text"
            />
            <br />
            <Unknown
                  cityName={undefined}
                  currently=""
                  description=""
                  timeStamp=""
            />
      </div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ClientApp />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ClientApp {
        "_reactInternalInstance": [Circular],
        "addSearch": [Function],
        "context": Object {},
        "fetchData": [Function],
        "getCurrentLocation": [Function],
        "getRandom": [Function],
        "getWeather": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "city": "",
          "currently": "",
          "description": "",
          "loading": false,
          "name": "",
          "searches": Array [],
          "timeStamp": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <div
                    className="App"
          >
                    <Unknown
                              getCurrent={[Function]}
                              getRandom={[Function]}
                    />
                    <h1>
                              DAGON WEATHER APP
                    </h1>
                    <input
                              onChange={undefined}
                              onKeyPress={[Function]}
                              placeholder="Search a city for the current weather"
                              type="text"
                    />
                    <br />
                    <Unknown
                              cityName={undefined}
                              currently=""
                              description=""
                              timeStamp=""
                    />
          </div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <div
                    className="App"
          >
                    <Unknown
                              getCurrent={[Function]}
                              getRandom={[Function]}
                    />
                    <h1>
                              DAGON WEATHER APP
                    </h1>
                    <input
                              onChange={undefined}
                              onKeyPress={[Function]}
                              placeholder="Search a city for the current weather"
                              type="text"
                    />
                    <br />
                    <Unknown
                              cityName={undefined}
                              currently=""
                              description=""
                              timeStamp=""
                    />
          </div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ClientApp />,
}
`;
